// scss-lint:disable ZeroUnit

////
/// @group breakpoints
////

/// Generates a media query string matching the input value. Refer to the documentation for the `breakpoint()` mixin to see what the possible inputs are.
///
/// @param {Keyword|Number} $val [small] - Breakpoint name, or px, rem, or em value to process.
///
/// @example
///     @media screen and #{breakpoint(medium)} {
///         // Medium and up styles
///     }
@function breakpoint($val: small) {
  // Size or keyword
  $bp: nth($val, 1);
  // Value for max-width media queries
  $bp-max: 0;
  // Direction of media query (up, down, or only)
  $dir: if(length($val) > 1, nth($val, 2), up);
  // Eventual output
  $str: '';
  // Is it a named media query?
  $named: false;

  // Orientation media queries have a unique syntax
  @if $bp == 'landscape' or $bp == 'portrait' {
    @return '(orientation: #{$bp})';
  } @else if $bp == 'retina' {
    @return '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)';
  }

  // Try to pull a named breakpoint out of the $breakpoints map
  @if type-of($bp) == 'string' {
    @if map-has-key($breakpoints, $bp) {
      @if $dir == 'only' or $dir == 'down' {
        $next-bp: map-next($breakpoints, $bp);

        @if $next-bp == null {
          $bp-max: null;
        } @else {
          $bp-max: $next-bp;
        }
      }

      $bp: map-get($breakpoints, $bp);
      $named: true;
    } @else {
      $bp: 0;
    }
  }

  // Convert any pixel, rem, or unitless value to em
  $bp: convert-to-em($bp);
  @if $bp-max {
    $bp-max: convert-to-em($bp-max) - (1/16);
  }

  // Skip media query creation if the input is "0 up" or "0 down"
  @if $bp > 0em or $dir == 'only' {
    // `only` ranges use the format `(min-width: n) and (max-width: n)`
    @if $dir == 'only' {
      @if $named == true {
        $str: $str + '(min-width: #{$bp})';

        @if $bp-max != null {
          $str: $str + ' and (max-width: #{$bp-max})';
        }
      } @else {
        @warn 'Only named media queries can have an `only` range.';
      }
    }

      // `down` ranges use the format `(max-width: n)`
    @else if $dir == 'down' {
      $max: 0;

      // For named breakpoints, subtract the breakpoint value by one "pixel", or 1/16em.
      @if $named {
        $max: $bp-max;
      } @else {
        $max: $bp;
      }

      $str: $str + '(max-width: #{$max})';
    }

      // `up` ranges use the format `(min-width: n)`
    @else if $bp > 0em {
      $str: $str + '(min-width: #{$bp})';
    }
  }

  @return $str;
}
